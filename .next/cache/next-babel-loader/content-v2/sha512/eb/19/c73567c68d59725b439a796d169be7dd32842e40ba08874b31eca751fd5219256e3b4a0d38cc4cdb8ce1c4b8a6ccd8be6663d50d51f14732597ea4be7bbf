{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\proekti\\\\proekti\\\\REACT\\\\NEXT.JS\\\\next-meetup\\\\pages\\\\index.js\";\n// import { useEffect, useState } from 'react'\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  //   const [loadedMeetups,setLoadedMeetups]= useState([])\n  //   useEffect(()=>{\n  // //send http request and fetch data\n  // setLoadedMeetups(DUMMY_MEETUPS)\n  //   },[])\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 4\n  }, this);\n} //----------- STATIC SIDE GENERATION ----FASTER-------\n\n\nexport async function getStaticProps() {\n  //fetch data from an API:\n  const client = await MongoClient.connect('mongodb+srv://Dalton:2204981492007@cluster0.slag6.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 //renegerate(regular update) every 5 seconds ,this is ffor webs ites where are changing many informations in a short time.....\n\n  };\n} // //---------- SERVER SIDE RENDERING---------\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/User/Desktop/proekti/proekti/REACT/NEXT.JS/next-meetup/pages/index.js"],"names":["MongoClient","Fragment","Head","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","image","address","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACA;;AACC;AAAA,UAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAIF,C,CACD;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFkB;AAGhCC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHgB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,CATP,CASU;;AATV,GAAP;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAepB,QAAf","sourcesContent":["// import { useEffect, useState } from 'react'\r\nimport { MongoClient } from 'mongodb'\r\nimport { Fragment } from 'react'\r\nimport Head from 'next/head'\r\nimport MeetupList from '../components/meetups/MeetupList'\r\n\r\nfunction HomePage(props) {\r\n  //   const [loadedMeetups,setLoadedMeetups]= useState([])\r\n  //   useEffect(()=>{\r\n  // //send http request and fetch data\r\n  // setLoadedMeetups(DUMMY_MEETUPS)\r\n  //   },[])\r\n  return\r\n  ;<Fragment>\r\n    <Head></Head>\r\n    <MeetupList meetups={props.meetups} />\r\n  </Fragment>\r\n}\r\n//----------- STATIC SIDE GENERATION ----FASTER-------\r\nexport async function getStaticProps() {\r\n  //fetch data from an API:\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Dalton:2204981492007@cluster0.slag6.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  )\r\n  const db = client.db()\r\n  const meetupsCollection = db.collection('meetups')\r\n  const meetups = await meetupsCollection.find().toArray()\r\n  client.close()\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1, //renegerate(regular update) every 5 seconds ,this is ffor webs ites where are changing many informations in a short time.....\r\n  }\r\n}\r\n\r\n// //---------- SERVER SIDE RENDERING---------\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n//   //fetch data from an API\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   }\r\n// }\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}