{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\proekti\\\\proekti\\\\REACT\\\\NEXT.JS\\\\next-meetup\\\\pages\\\\index.js\";\n// import { useEffect, useState } from 'react'\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some Adress 5,123454 City',\n  description: 'First Meetup'\n}, {\n  id: 'm1',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some Adress 9,123454 City',\n  description: 'Second Meetup'\n}];\n\nfunction HomePage(props) {\n  //   const [loadedMeetups,setLoadedMeetups]= useState([])\n  //   useEffect(()=>{\n  // //send http request and fetch data\n  // setLoadedMeetups(DUMMY_MEETUPS)\n  //   },[])\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n} //----------- STATIC SIDE GENERATION ----FASTER-------\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://Dalton:2204981492007@cluster0.slag6.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    revalidate: 1 //renegerate(regular update) every 5 seconds ,this is ffor webs ites where are changing many informations in a short time.....\n\n  };\n} // //---------- SERVER SIDE RENDERING---------\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/User/Desktop/proekti/proekti/REACT/NEXT.JS/next-meetup/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,gFAJJ;AAKEC,EAAAA,OAAO,EAAE,2BALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,gFAJJ;AAKEC,EAAAA,OAAO,EAAE,2BALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAkBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CACD;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAC,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,mGAApB,CAAnB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACE,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACF,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ,KADF;AAILe,IAAAA,UAAU,EAAE,CAJP,CAIU;;AAJV,GAAP;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeT,QAAf","sourcesContent":["// import { useEffect, useState } from 'react'\r\nimport { MongoClient } from 'mongodb'\r\nimport MeetupList from '../components/meetups/MeetupList'\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: 'm1',\r\n    title: 'A First Meetup',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n    address: 'Some Adress 5,123454 City',\r\n    description: 'First Meetup',\r\n  },\r\n  {\r\n    id: 'm1',\r\n    title: 'A Second Meetup',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n    address: 'Some Adress 9,123454 City',\r\n    description: 'Second Meetup',\r\n  },\r\n]\r\nfunction HomePage(props) {\r\n  //   const [loadedMeetups,setLoadedMeetups]= useState([])\r\n  //   useEffect(()=>{\r\n  // //send http request and fetch data\r\n  // setLoadedMeetups(DUMMY_MEETUPS)\r\n  //   },[])\r\n  return <MeetupList meetups={props.meetups} />\r\n}\r\n//----------- STATIC SIDE GENERATION ----FASTER-------\r\nexport async function getStaticProps() {\r\n  //fetch data from an API\r\n  const client=await MongoClient.connect('mongodb+srv://Dalton:2204981492007@cluster0.slag6.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n    revalidate: 1, //renegerate(regular update) every 5 seconds ,this is ffor webs ites where are changing many informations in a short time.....\r\n  }\r\n}\r\n\r\n// //---------- SERVER SIDE RENDERING---------\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n//   //fetch data from an API\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   }\r\n// }\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}